// SPDX-License-Identifier: UNLICENSED
pragma ever-solidity >= 0.62.0;
// import "locklift/src/~console.tsol";
import "./~Workers.tsol";
pragma AbiHeader expire;
pragma AbiHeader pubkey;

contract CarFactory {
    address public owner;
    address public factoryAddress;
    uint128 constant MIN_CONTRACT_BALANCE = 100 ever;
    TvmCell static workerContractCode;

    event AddressReturn(address userAddress);
    event SendingOffer(string msg);

    constructor(
        address _owner
    ) public {
        tvm.accept();
        owner = _owner;
        factoryAddress = address(this);
    }

    modifier onlyOwner {
        require(msg.sender == owner, 1001);
        _;
    }

    function buildInitParams(address _accountAddress) internal returns (TvmCell) {
        return tvm.buildStateInit({
            contr: Workers,
            varInit: {
                owner: _accountAddress,
                factoryAddress: address(this)
            },
            pubkey: tvm.pubkey(),
            code: workerContractCode
        });
    }

    function getAddress(address _accountAddress) public returns(address) {
        tvm.accept();
        TvmCell accountInitState = buildInitParams(_accountAddress);
        emit AddressReturn(address(tvm.hash(accountInitState)));
        return address(tvm.hash(accountInitState));
    }

    //function to senf offer to the worker.
    function sendOffer(string offer, address _destAddress) public {
        tvm.rawReserve(MIN_CONTRACT_BALANCE, 0);
        offer = "Will you take this work-offer?";
        emit SendingOffer(offer);
       Workers(_destAddress).receiveOffer(offer);
    }

    //callback of worker accepts the offer or not.
    function workerAcceptOffer() public {

    }

    //TODO : set up onBounce to check two things.
    // 1) check if worker contract exists
    // 2) if it doesn't, begin internal-deploy 
    //      and recall the function(ex. offer)

    onBounce(TvmSlice body) external {
        TvmSlice newBody = body.loadRef().toSlice();
        uint32 functionId = newBody.decode(uint32);

        // if(functionId == tvm.functionId()) {

        // }
    }

}